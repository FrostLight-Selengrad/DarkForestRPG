// battle.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ–µ–º
function displayBattle(battleData) {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
    document.getElementById('player-combat-hp').innerText = `‚ù§Ô∏è ${battleData.player.hp}/${battleData.player.maxHp}`;
    document.getElementById('player-combat-attack').innerText = `‚öîÔ∏è ${battleData.player.attack}`;
    document.getElementById('player-combat-defence').innerText = `üõ°Ô∏è ${battleData.player.defense}`;
    document.getElementById('player-combat-speed').innerText = `üèÉ ${battleData.player.speed}`;

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–∞–≥–∞
    document.getElementById('enemy-combat-hp').innerText = `‚ù§Ô∏è ${battleData.enemy.hp}/${battleData.enemy.maxHp}`;
    document.getElementById('enemy-combat-attack').innerText = `‚öîÔ∏è ${battleData.enemy.attack}`;
    document.getElementById('enemy-combat-defence').innerText = `üõ°Ô∏è ${battleData.enemy.defense}`;
    document.getElementById('enemy-combat-speed').innerText = `üèÉ ${battleData.enemy.speed}`;

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–º–µ–Ω–∏ –∏ —É—Ä–æ–≤–Ω—è –≤—Ä–∞–≥–∞, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    const enemyNameElement = document.getElementById('enemy-combat-name');
    if (enemyNameElement) {
        enemyNameElement.innerText = battleData.enemy.name;
    }
    const enemyLevelElement = document.getElementById('enemy-level');
    if (enemyLevelElement) {
        enemyLevelElement.innerText = `–£—Ä–æ–≤–µ–Ω—å ${battleData.enemy.level}`;
    }

    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–∞–≥–∞
    document.getElementById('enemy-image').src = `/images/${battleData.enemy.image || 'default_enemy.png'}`;

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∞ –±–æ—è —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    document.getElementById('battle-log').innerText = battleData.message;
}

async function fightMonster() {
    const userId = window.Telegram.WebApp.initDataUnsafe.user.id;
    try {
        const response = await fetch(`/api/battle/start?userId=${userId}`, { method: 'POST' });
        if (!response.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å –±–æ–π');
        const battleData = await response.json();
        setActiveInterface('battle-interface');
        displayBattle(battleData);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –±–æ—è:', error);
        document.getElementById('exploration-log').innerText = '–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –±–æ—è: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ';
    }
}

async function attack() {
    const userId = window.Telegram.WebApp.initDataUnsafe.user.id;
    try {
        const response = await fetch(`/api/battle/attack?userId=${userId}`, { method: 'POST' });
        if (!response.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∞—Ç–∞–∫–æ–≤–∞—Ç—å');
        const battleData = await response.json();
        displayBattle(battleData);
        if (battleData.isOver) {
            endBattle(battleData);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞—Ç–∞–∫–∏:', error);
        document.getElementById('battle-log').innerText = '–û—à–∏–±–∫–∞: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ';
    }
}

async function tryFlee() {
    const userId = window.Telegram.WebApp.initDataUnsafe.user.id;
    try {
        const response = await fetch(`/api/battle/flee?userId=${userId}`, { method: 'POST' });
        if (!response.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å');
        const result = await response.json();
        document.getElementById('battle-log').innerText = result.message;
        if (result.success) {
            switchInterface('exploration-interface');
            showActions(['action-continue', 'action-return-camp']);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–±–µ–≥–∞:', error);
        document.getElementById('battle-log').innerText = '–û—à–∏–±–∫–∞: –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ';
    }
}

function endBattle(battleData) {
    document.getElementById('battle-log').innerText = battleData.message;
    switchInterface('exploration-interface');
    showActions(['action-continue', 'action-return-camp']);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ battle.js –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
console.log('battle.js loaded');